---
- name: Deploy Node Exporter Full Dashboard
  hosts: manager_nodes
  become: true
  gather_facts: true

  vars:
    monitoring_stack_name: "monitoring"
    monitoring_data_path: "/data/monitoring"
    node_exporter_dashboard_path: "./config/node-exporter-full.json"

  tasks:
    - name: Read the Node Exporter Full dashboard JSON
      ansible.builtin.slurp:
        src: "{{ node_exporter_dashboard_path }}"
      register: dashboard_content
      delegate_to: localhost

    - name: Parse dashboard JSON and remove template variables
      ansible.builtin.set_fact:
        dashboard_json: "{{ dashboard_content.content | b64decode | from_json }}"

    - name: Remove template input variables from dashboard
      ansible.builtin.set_fact:
        clean_dashboard: "{{ dashboard_json | combine({
          '__inputs': [],
          '__elements': {},
          '__requires': dashboard_json.__requires | rejectattr('type', 'equalto', 'datasource') | list,
          'id': null,
          'uid': 'node-exporter-full'
        }) }}"

    - name: Process dashboard panels to use our Prometheus datasource
      ansible.builtin.set_fact:
        processed_dashboard: "{{ clean_dashboard | regex_replace('\\${DS_PROMETHEUS}', 'prometheus') }}"

    - name: Create cleaned dashboard directory
      ansible.builtin.file:
        path: "{{ monitoring_data_path }}/grafana-dashboards"
        state: directory
        mode: '0755'
        owner: '472'
        group: '0'

    - name: Write processed dashboard to file
      ansible.builtin.copy:
        content: "{{ processed_dashboard | to_nice_json }}"
        dest: "{{ monitoring_data_path }}/grafana-dashboards/node-exporter-full.json"
        mode: '0644'
        owner: '472'
        group: '0'

    - name: Restart Grafana to reload dashboards
      ansible.builtin.command: docker service update --force {{ monitoring_stack_name }}_grafana

    - name: Wait for Grafana to restart
      ansible.builtin.pause:
        seconds: 30

    - name: Test Grafana health after dashboard deployment
      ansible.builtin.uri:
        url: "http://{{ ansible_default_ipv4.address }}:3000/api/health"
        method: GET
        status_code: 200
      register: grafana_health
      retries: 5
      delay: 10
      until: grafana_health.status == 200
      ignore_errors: true

    - name: Display dashboard deployment results
      ansible.builtin.debug:
        msg:
          - "========================================"
          - "üìä Node Exporter Full Dashboard Deployed!"
          - "========================================"
          - ""
          - "Status: {{ 'Success' if grafana_health.status == 200 else 'Issues detected' }}"
          - ""
          - "üéØ Access Grafana: http://{{ ansible_default_ipv4.address }}:3000"
          - "üîë Login: {{ grafana_admin_user | default('admin') }} / {{ grafana_admin_password | default('admin123') }}"
          - ""
          - "üìà Available Dashboards:"
          - "- Node Exporter Full (comprehensive system monitoring)"
          - "- Pi Docker Swarm Basic (simple overview)"
          - ""
          - "üí° The Node Exporter Full dashboard includes:"
          - "- Detailed CPU, Memory, Disk metrics"
          - "- Network monitoring"
          - "- System load and processes"
          - "- Hardware temperature monitoring"
          - "- And much more!"
          - ""
          - "‚è±Ô∏è  Wait 1-2 minutes for dashboard provisioning to complete"
