---
# =============================================================================
# Services Inventory - Declarative Stack Configuration
# =============================================================================
# This file defines all services/stacks to be deployed in the cluster
# Add new services here to enable automatic deployment
# =============================================================================

# Global configuration for all services
global:
  data_root: "/data"
  stack_directory: "{{ playbook_dir }}/../applications/stacks"
  config_directory: "{{ playbook_dir }}/../applications/config"

# Service definitions
services:
  
  # =============================================================================
  # Monitoring Stack
  # =============================================================================
  monitoring:
    enabled: true
    stack_file: "monitoring-stack.yml"
    description: "Prometheus, Grafana, Node Exporter monitoring"
    data_directories:
      - "/data/monitoring"
      - "/data/monitoring/prometheus"
      - "/data/monitoring/prometheus-config"
      - "/data/monitoring/prometheus-config/rules"
      - "/data/monitoring/grafana"
      - "/data/monitoring/grafana-config"
      - "/data/monitoring/grafana-config/provisioning"
      - "/data/monitoring/grafana-config/provisioning/datasources"
      - "/data/monitoring/grafana-config/provisioning/dashboards"
      - "/data/monitoring/grafana-dashboards"
    config_files:
      - src: "prometheus.yml"
        dest: "/data/monitoring/prometheus-config/prometheus.yml"
      - src: "prometheus-rules.yml"
        dest: "/data/monitoring/prometheus-config/rules/prometheus-rules.yml"
      - src: "grafana-datasources.yml"
        dest: "/data/monitoring/grafana-config/provisioning/datasources/datasources.yml"
      - src: "grafana-dashboards.yml"
        dest: "/data/monitoring/grafana-config/provisioning/dashboards/dashboards.yml"
      - src: "node-exporter-full-clean.json"
        dest: "/data/monitoring/grafana-dashboards/node-exporter-full.json"
        owner: "472"
        group: "0"
    special_permissions:
      - path: "/data/monitoring/grafana"
        owner: "472"
        group: "472"
        recurse: true
      - path: "/data/monitoring/grafana-dashboards"
        owner: "472"
        group: "472"
        recurse: true
    dependencies: []
    tags: ["monitoring", "core"]

  # =============================================================================
  # Komga Comic Server Stack
  # =============================================================================
  komga:
    enabled: true
    stack_file: "komga-stack.yml"
    description: "Comic and manga server with multi-node data synchronization"
    zfs_dataset:
      name: "tank/komga"
      mountpoint: "/tank/komga"
      properties:
        compression: "lz4"
        atime: "off"
        recordsize: "128K"  # Better for large files
    data_directories:
      - "/tank/komga"
      - "/tank/komga/config"
      - "/tank/komga/data"
      - "/tank/komga/library"
    special_permissions:
      - path: "/tank/komga"
        owner: "1000"
        group: "1000"
        recurse: true
    dependencies: []
    tags: ["media", "web"]
    syncoid:
      enabled: true
      source_dataset: "tank/komga"
      sync_interval: "*/15 * * * *"  # Every 15 minutes

# =============================================================================
# Template for adding new services
# =============================================================================
# 
# new_service:
#   enabled: true|false
#   stack_file: "new-service-stack.yml"
#   description: "Brief description of the service"
#   data_directories:
#     - "/data/new-service"
#   config_files:
#     - src: "config.yml"
#       dest: "/data/new-service/config.yml"
#       mode: "0644"
#       owner: "root"  # optional
#       group: "root"  # optional
#   special_permissions:  # optional
#     - path: "/data/new-service"
#       owner: "1000"
#       group: "1000"
#       recurse: true
#   health_checks:
#     - url: "http://{{ ansible_default_ipv4.address }}:8081"
#       expected_status: 200
#       name: "New Service"
#   dependencies: ["other_service"]  # optional
#   tags: ["web", "database", "custom"]
#
# =============================================================================
